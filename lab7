LXI H, 1000H      ; Load HL with the memory address 1000H
MOV C, M          ; Move value memory location 1000H into reg C (lower byte of first number)
INX H             ; Increment HL to point to 1001H
MOV B, M          ; Move value memory location 1001H into regB (upper byte of first number)
INX H             ; Increment HL to point to 1002H
MOV E, M          ; Move value of memory location 1002H into regE(lower byte of second number)
INX H             ; Increment HL to point to 1003H
MOV D, M          ; Move value of memory location 1003H into regD(upper byte of second number)

; Add the lower bytes
MOV A, C          ; Move the lower byte of the first number (in C) into accumulator A
ADD E             ; Add the lower byte of the second number (in E) to accumulator A
MOV C, A          ; Store the result of the addition into register C (new lower byte)

; Add the upper bytes with carry
MOV A, B          ; Move the upper byte of the first number (in B) into accumulator A
ADC D             ; Add the upper byte of the second number (in D) and the carry flag (from the previous addition) to accumulator A
MOV B, A          ; Store the result of the addition into register B (new upper byte)

; Store the result in memory
INX H             ; Increment HL to point to 1004H (where the lower byte of the result will be stored)
MOV M, C          ; Move the lower byte of the result (in C) into memory location 1004H
INX H             ; Increment HL to point to 1005H (where the upper byte of the result will be stored)
MOV M, B          ; Move the upper byte of the result (in B) into memory location 1005H

HLT               ; Halt the program
